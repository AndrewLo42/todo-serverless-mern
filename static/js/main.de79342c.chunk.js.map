{"version":3,"sources":["components/TodoForm.js","components/TodoTask.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","entries","updateEntries","title","setTitle","useState","description","setDescription","deadline","setDeadline","Date","cancelTodo","className","placeholder","value","onChange","e","target","disableClock","onClick","async","preventDefault","currentTodo","fetch","headers","accept","body","JSON","stringify","method","then","response","json","jsonData","newEntries","push","console","log","catch","err","error","TodoTask","item","status","setStatus","date","parse","renderer","hours","minutes","seconds","completed","alert","filteredEntries","filter","task","_id","id","deletedCount","deleteItem","newItem","forEach","editItem","TodoList","list","map","App","data","setData","useEffect","getData","Container","Col","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAkEeA,MA/DE,EAAEC,UAASC,oBAC1B,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAAaC,GAAkBF,mBAAS,KACxCG,EAAUC,GAAeJ,mBAAS,IAAIK,MAuCvCC,EAAa,KACjBP,EAAS,IACTG,EAAe,IACfE,EAAY,IAAIC,KAAhB,EAGF,OACE,sBAAKE,UAAU,mBAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,uBAAOA,UAAU,kBAAkBC,YAAY,YAAYC,MAAOX,EAAOY,SA9CpDC,IACzBZ,EAASY,EAAEC,OAAOH,MAAlB,IA8CI,0BAAUF,UAAU,yBAAyBC,YAAY,mBAAmBC,MAAOR,EAAaS,SA5CrEC,IAC/BT,EAAeS,EAAEC,OAAOH,MAAxB,IA4CI,cAAC,IAAD,CAAgBI,cAAc,EAAMH,SAAUN,EAAaK,MAAON,OAEpE,sBAAKI,UAAU,sCAAf,UACE,wBAAQA,UAAU,cAAcO,QA5CtBC,UACdJ,EAAEK,iBACF,MAAMC,EAAc,CAClBnB,MAAOA,EACPG,YAAaA,EACbE,SAAUA,GAGa,KAAtBc,EAAYnB,OAA4C,KAA5BmB,EAAYhB,mBACnCiB,MAAM,uEAAwE,CAClFC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB,aAAc,QAEhBC,KAAMC,KAAKC,UAAUN,GACrBO,OAAO,SAERC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,IAAIC,EAAa,IAAIjC,GACrBiC,EAAWC,KAAKF,GAChB/B,EAAcgC,GACdvB,IACAyB,QAAQC,IAAIJ,EAAZ,IAEDK,OAAMC,GAAOH,QAAQI,MAAMD,IAC7B,EAiBG,sBACA,wBAAQ3B,UAAU,cAAcO,QAASR,EAAzC,wBATN,E,wBCoDa8B,MApGE,EAAEC,OAAMzC,UAASC,oBAEhC,MAAOyC,EAAQC,GAAavC,qBAoF5B,OACE,sBAAKO,UAAU,YAAf,UACE,oBAAIA,UAAU,cAAd,SAA6B8B,EAAKvC,QAClC,qBAAKS,UAAU,+BAAf,SACG8B,EAAKpC,cAER,gCAAK,cAAC,IAAD,CAAWuC,KAAMnC,KAAKoC,MAAMJ,EAAKlC,UAAWuC,SAzCjC,EAAGC,QAAOC,UAASC,UAASC,gBAC5C,IAAIR,EAAS,IAUf,OARIA,EADCD,EAAKS,UACI,sBAAMvC,UAAU,gBAAhB,kBAED,sBAAMA,UAAU,gBAAhB,yBAGF,IAARoC,GAAuB,IAAVE,GAAyB,KAAVD,GAAiBP,EAAKS,WACnDC,MAAM,sCAAD,OAAuCV,EAAKvC,QAEhDgD,IAAcT,EAAKS,UAElB,qCACE,2CAAa,sBAAMvC,UAAU,iBAAhB,uBAAb,OACA,gDAGKuC,GAAaT,EAAKS,UAEvB,qCACE,2CAAcR,EAAd,OACA,qDAMJ,qCACE,2CAAcA,EAAd,OACA,8CAAiBK,EAAjB,IAAyBC,EAAzB,IAAmCC,OAHzC,IAcE,OACA,qBAAKtC,UAAU,gCAAf,SACI8B,EAAKS,UAA2H,wBAAQvC,UAAU,+BAA+BO,QAAS,IAhE/KC,WAEjB,MAAMiC,EADW,IAAIpD,GACcqD,QAAOC,GACjCA,EAAKC,MAAQC,UAEClC,MAAM,wEAAD,OAAyEmB,EAAKc,KAAO,CAC/GhC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB,aAAc,QAEhBI,OAAO,WAERC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IAC0B,IAA1BA,EAASyB,cACXxD,EAAcmD,EACf,GAZH,EA2DsMM,CAAWjB,EAAKc,KAAhF,yBAA/G,wBAAQ5C,UAAU,iCAAiCO,QAAS,IA1FpEC,WACf,MAAMwC,EAAUlB,EAChBkB,EAAQT,WAAY,QAEG5B,MAAM,wEAAD,OAAyEqC,EAAQJ,KAAO,CAClHhC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB,aAAc,QAEhBC,KAAMC,KAAKC,UAAUgC,GACrB/B,OAAO,QAERC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,IAAIC,EAAa,IAAIjC,GACrBiC,EAAW2B,SAAQN,IACdA,EAAKC,MAAQvB,EAASuB,MACvBD,EAAOtB,EACR,IAEH/B,EAAcgC,EAAd,IAEDI,OAAMC,GAAOH,QAAQI,MAAMD,IAnB5B,EAsFyFuB,CAASpB,EAAKc,KAAhF,+BARzB,ECzEaO,MAbE,EAAE9D,UAASC,oBAC1B,MAAM8D,EAAO/D,EAAQgE,KAAKvB,GAEtB,cAAC,EAAD,CAAyBA,KAAMA,EAAMzC,QAASA,EAASC,cAAeA,GAAvDwC,EAAKc,OAGxB,OACE,qBAAK5C,UAAU,OAAf,SACGoD,GAFL,EC2CaE,MA9Cf,WACE,MAAOC,EAAMC,GAAW/D,qBAwBxB,OAtBAgE,qBAAU,KACQjD,iBACSG,MAAM,uEAAwE,CACnGC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB,aAAc,QAEhBI,OAAQ,QAETC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJG,QAAQC,IAAIJ,GACZmC,EAAQnC,EAAR,IAEDK,OAAOC,IACNH,QAAQI,MAAMD,EAAd,GAdF,EAiBF+B,EAAS,GACR,IAECH,EAQF,eAACI,EAAA,EAAD,WACE,oBAAI3D,UAAU,6BAAd,uBACA,eAAC4D,EAAA,EAAD,CAAK5D,UAAU,mDAAf,UACE,oBAAIA,UAAU,cAAd,4BACA,cAAC,EAAD,CAAUX,QAASkE,EAAMjE,cAAekE,OAE1C,cAACG,EAAA,EAAD,CAAW3D,UAAU,uCAArB,SACE,cAAC,EAAD,CAAUX,QAASkE,EAAMjE,cAAekE,SAb1C,4CAiBL,ECtCcK,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7C,MAAK,EAAG8C,SAAQC,SAAQC,SAAQC,SAAQC,cAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EAAR,GAEH,ECHHO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,G","file":"static/js/main.de79342c.chunk.js","sourcesContent":["import React, {  useState } from 'react';\nimport DateTimePicker from 'react-datetime-picker';\n\nconst TodoForm = ({entries, updateEntries}) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [deadline, setDeadline] = useState(new Date());\n\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  }\n  const handleDescriptionChange = (e) => {\n    setDescription(e.target.value);\n  }\n\n  const addTodo = async(e) => {\n    e.preventDefault();\n    const currentTodo = {\n      title: title,\n      description: description,\n      deadline: deadline\n    }\n\n    if(currentTodo.title !== '' && currentTodo.description !== '') {\n      await fetch('https://sd5t3nnwwl.execute-api.us-east-1.amazonaws.com/dev/api/todos', {\n        headers: {\n          accept: 'application/json',\n          'Content-Type': 'application/json',\n          'User-Agent': 'todo',\n        },\n        body: JSON.stringify(currentTodo),\n        method:'POST'\n      })\n      .then(response => response.json())\n      .then(jsonData => {\n        let newEntries = [...entries];\n        newEntries.push(jsonData);\n        updateEntries(newEntries)\n        cancelTodo();\n        console.log(jsonData)\n      })\n      .catch(err => console.error(err));\n    }\n  }\n\n  const cancelTodo = () => {\n    setTitle('');\n    setDescription('');\n    setDeadline(new Date())\n  }\n\n  return(\n    <div className=\"m-auto task-form\">\n      <div className=\"d-flex flex-column\">\n        <input className=\"title-form mb-3\" placeholder=\"Task Name\" value={title} onChange={handleTitleChange} />\n        <textarea className=\"description-form mb-3 \" placeholder=\"Task Description\" value={description} onChange={handleDescriptionChange} />\n        <DateTimePicker disableClock={true} onChange={setDeadline} value={deadline}/>\n      </div>\n      <div className=\"mt-2 d-flex justify-content-between\">\n        <button className=\"form-button\" onClick={addTodo} >Add Task</button>\n        <button className=\"form-button\" onClick={cancelTodo}>Reset</button>\n      </div>\n    </div>\n  )\n}\n\nexport default TodoForm;\n","import React, { useState } from 'react';\nimport Countdown from \"react-countdown\";\n\nconst TodoTask = ({item, entries, updateEntries}) => {\n\n  const [status, setStatus] = useState();\n\n  const editItem = async (id) => {\n    const newItem = item;\n    newItem.completed = true;\n\n    const response = await fetch(`https://sd5t3nnwwl.execute-api.us-east-1.amazonaws.com/dev/api/todos/${newItem._id}`, {\n      headers: {\n        accept: 'application/json',\n        'Content-Type': 'application/json',\n        'User-Agent': 'todo',\n      },\n      body: JSON.stringify(newItem),\n      method:'PUT'\n    })\n    .then(response => response.json())\n    .then(jsonData => {\n      let newEntries = [...entries];\n      newEntries.forEach(task => {\n        if(task._id === jsonData._id) {\n          task = jsonData;\n        }\n      });\n      updateEntries(newEntries)\n    })\n    .catch(err => console.error(err));\n  }\n\n  const deleteItem = async(id) => {\n    let newEntries = [...entries];\n    const filteredEntries = newEntries.filter(task => {\n      return task._id !== id\n    })\n    const response = await fetch(`https://sd5t3nnwwl.execute-api.us-east-1.amazonaws.com/dev/api/todos/${item._id}`, {\n      headers: {\n        accept: 'application/json',\n        'Content-Type': 'application/json',\n        'User-Agent': 'todo',\n      },\n      method:'DELETE'\n    })\n    .then(response => response.json())\n    .then(jsonData => {\n      if (jsonData.deletedCount === 1) {\n        updateEntries(filteredEntries)\n      }\n    })\n  }\n\n  const CountRender = ({ hours, minutes, seconds, completed }) => {\n      let status = '?'\n      if(item.completed) {\n        status =  <span className=\"task-complete\" >Done</span>\n      } else {\n        status = <span className=\"task-progress\">In Progress</span>\n      }\n\n    if(hours===0 && seconds===0 && minutes===10 && !item.completed){\n      alert(`You have 10 minutes left to finish ${item.title}`)\n    }\n    if(completed && !item.completed){\n      return (\n        <>\n          <div>Status: <span className=\"task-dismissed\">Dismissed</span> </div>\n          <span>Task Over</span>\n        </>\n      );\n    } else if (completed && item.completed) {\n        return(\n          <>\n            <div>Status: {status} </div>\n            <span>Task Complete!</span>\n          </>\n        )\n    }\n\n    return(\n        <>\n          <div>Status: {status} </div>\n          <span>Deadline: {hours}:{minutes}:{seconds}</span>\n        </>\n    )\n  }\n\n  return(\n    <div className=\"task-card\">\n      <h3 className=\"text-center\">{item.title}</h3>\n      <div className=\"text-center task-description\">\n        {item.description}\n      </div>\n      <div><Countdown date={Date.parse(item.deadline)} renderer={CountRender}/> </div>\n      <div className=\"d-flex justify-content-center\">\n        {!item.completed ? <button className=\"task-button complete-task mt-3\" onClick={() => editItem(item._id)}>Complete Task</button> : <button className=\"task-button remove-task mt-3\" onClick={() => deleteItem(item._id)}>Remove Task</button>}\n      </div>\n    </div>\n  )\n}\n\nexport default TodoTask;\n","import React from 'react';\nimport TodoTask from './TodoTask';\n\nconst TodoList = ({entries, updateEntries}) => {\n  const list = entries.map((item) => {\n    return(\n      <TodoTask key={item._id} item={item} entries={entries} updateEntries={updateEntries}/>\n    )\n  })\n  return(\n    <div className=\"mt-3\">\n      {list}\n    </div>\n  )\n}\n\nexport default TodoList;\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport TodoForm from './components/TodoForm';\nimport { Container, Col } from \"react-bootstrap\";\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    const getData = async () => {\n      const allTodos = await fetch('https://sd5t3nnwwl.execute-api.us-east-1.amazonaws.com/dev/api/todos', {\n        headers: {\n          accept: 'application/json',\n          'Content-Type': 'application/json',\n          'User-Agent': 'todo',\n        },\n        method: \"GET\"\n      })\n      .then(response => response.json())\n      .then(jsonData => {\n        console.log(jsonData)\n        setData(jsonData)\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n    }\n    getData();\n  }, []);\n\n  if(!data) {\n    return (\n      <div>\n        loading...\n      </div>\n    )\n  }\n  return (\n    <Container>\n      <h1 className=\"text-center mt-4 app-title\" >Todo List</h1>\n      <Col className=\"d-flex flex-column m-auto justify-content-center\">\n        <h4 className=\"text-center\">Add A New Task</h4>\n        <TodoForm entries={data} updateEntries={setData}/>\n      </Col>\n      <Container className=\"d-flex justify-content-center m-auto\" >\n        <TodoList entries={data} updateEntries={setData}/>\n      </Container>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}